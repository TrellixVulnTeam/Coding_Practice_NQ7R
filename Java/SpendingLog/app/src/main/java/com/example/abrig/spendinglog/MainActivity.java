package com.example.abrig.spendinglog;import android.content.SharedPreferences;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.design.widget.BottomNavigationView;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentTransaction;import android.support.v7.app.AppCompatActivity;import android.view.MenuItem;import android.view.View;import android.widget.Button;import android.widget.TextView;import java.util.ArrayList;import java.util.Map;public class MainActivity extends AppCompatActivity implements AddFiltersDialog.ExampleDialogListener {    private Button resetPreferencesButton;    public static SharedPreferences prefs = null;    public static FragmentTransaction transaction;    public static TransactionHandler TH;//    private TextView mTextMessage;    private final BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener            = new BottomNavigationView.OnNavigationItemSelectedListener() {        @Override        public boolean onNavigationItemSelected(@NonNull MenuItem item) {            switch (item.getItemId()) {                case R.id.navigation_home://                    mTextMessage.setText(R.string.title_home);                    resetPreferencesButton.setVisibility(View.INVISIBLE);                    openFragment(TransactionView.newInstance("", ""));                    return true;                case R.id.navigation_dashboard://                    mTextMessage.setText(R.string.title_dashboard);                    resetPreferencesButton.setVisibility(View.INVISIBLE);                    openFragment(EntityView.newInstance("", ""));                    return true;                case R.id.navigation_notifications://                    mTextMessage.setText(R.string.title_notifications);                    resetPreferencesButton.setVisibility(View.INVISIBLE);                    openFragment(UserView.newInstance("", ""));                    return true;            }            return false;        }    };    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        prefs = getSharedPreferences("com.example.spendinglog", MODE_PRIVATE);        // ask user to start from a new application state on launch.        resetPreferencesButton = findViewById(R.id.resetPeferencesButton);        resetPreferencesButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                resetPreferences();            }        });        //        TH = new TransactionHandler(this);//        Map<String, ?> keysValues = prefs.getAll();//        System.out.println("CLEARING");//        for (String s : keysValues.keySet()) {//            Class clazz = keysValues.get(s).getClass();//            System.out.println("Key: " + s + ", clazz: " + clazz + ", value: " + keysValues.get(s));//        }//        mTextMessage = (TextView) findViewById(R.id.message);        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);        runTests();    }    public void runTests() {        resetPreferences();        Entity me = new Entity("avery", "AVERY", 200000, true);        Entity power = new Entity("Power", "POWER", Integer.MAX_VALUE, true);        Entity rent = new Entity("rent", "RENT", Integer.MAX_VALUE, true);        Entity gst = new Entity("GST", "INCOME", Integer.MAX_VALUE, true);        TransactionHandler TH = new TransactionHandler(this);        TransactionType powerTransaction = new TransactionType("Power");        TransactionType rentTransaction = new TransactionType("Rent");        TransactionType incomeTransaction = new TransactionType("Income");        TransactionType internetTransaction = new TransactionType("Internet");        TransactionType automotiveTransaction = new TransactionType("Automtoive");        boolean t1 = TH.tryTransaction(me, power, 10005, true, OccurringOptions.MONTHLY.toString(), powerTransaction);        boolean t2 = TH.tryTransaction(me, rent, 37550, true,  OccurringOptions.MONTHLY.toString(), rentTransaction);        boolean t3 = TH.tryTransaction(me, power, 10005, true,  OccurringOptions.MONTHLY.toString(), powerTransaction);        boolean t4 = TH.tryTransaction(me, rent, 37550, true,  OccurringOptions.MONTHLY.toString(), rentTransaction);        boolean t5 = TH.tryTransaction(gst, me, 14700, true,  OccurringOptions.MONTHLY.toString(), incomeTransaction);        boolean t6 = TH.tryTransaction(me, rent, 37550, true,  OccurringOptions.MONTHLY.toString(), rentTransaction);        boolean t7 = TH.tryTransaction(me, rent, 37550, true,  OccurringOptions.MONTHLY.toString(), rentTransaction);        boolean t8 = TH.tryTransaction(me, rent, 37550, true,  OccurringOptions.MONTHLY.toString(), rentTransaction);        boolean t9 = TH.tryTransaction(me, rent, 37550, true,  OccurringOptions.MONTHLY.toString(), rentTransaction);        boolean t10 = TH.tryTransaction(me, rent, 37550, true,  OccurringOptions.MONTHLY.toString(), rentTransaction);        System.out.println("Transactions: \n" + t1 + "\n" + t2 + "\n" + t3 + "\n" + t4 + "\n" + t5);        System.out.println(t6 + "\n" + t7 + "\n" + t8 + "\n" + t9 + "\n" + t10);        System.out.println(me.getTransactions());        System.out.println(me.getCustomerStats());        Utilities.createCSV(me.getTransactions());//        prefs.edit().putBoolean("firstrun", true).apply();    }    public void resetPreferences() {        prefs.edit().clear().commit();        prefs = getSharedPreferences("com.example.spendinglog", MODE_PRIVATE);        resetPreferencesButton.setVisibility(View.INVISIBLE);        if (TH != null){            TH.resetTransactionHandler();        }        onResume();    }    public void openFragment(Fragment fragment) {        transaction = getSupportFragmentManager().beginTransaction();        transaction.replace(R.id.container, fragment);        transaction.addToBackStack(null);        transaction.commit();    }    @Override    protected void onResume() {        super.onResume();        if (prefs.getBoolean("firstrun", true)) {            SharedPreferencesWriter.write("firstrun", false);            System.out.print("KEY SET: " + MainActivity.prefs.getAll().keySet());            for (String s : MainActivity.prefs.getAll().keySet()) {                System.out.print("String entry: " + s);            }            System.out.println("\n\n\n\tFIRST RUN\n\n\n");            openFragment(UserProfile.newInstance("", ""));        }        else {            System.out.print("\n\n\n\tNOT THE FIRST RUN\n\n\n");        }    }    @Override    public void applyTexts(String filterString) {        System.out.println("\t\tAPPLYING TEXTS:\nfilterString (MainActivity): " + filterString);    }}